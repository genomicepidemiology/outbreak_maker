#!/usr/bin/env python

import argparse
import sys
import logging
import os
import json

sys.path = [os.path.join(os.path.dirname(os.path.realpath(__file__)),'..')] + sys.path

from outbreak_maker import version

__author__ = "Malte B. Hallgren"
__version__ = version.__version__

from outbreak_maker import determineOutbreaks

def main():
    description = 'Outbreak_maker: a tool for rapidly the epidemiology of a large number of reads.'

    parser = argparse.ArgumentParser(description=description)
    parser.add_argument('-illumina', action="store", type=str, dest='illumina', nargs="+",
                        default=[], help='Illumina input files. Must be paired-end.')
    #parser.add_argument('-nanopore', action="store", type=str, dest='nanopore', nargs="+",
    #                    default=[], help='Nanopore input files.')
    #parser.add_argument('-fasta', action="store", type=str, dest='fasta', nargs="+",
    #                    default=[], help='fasta input files.')
    parser.add_argument('-ani', action="store", type=str, dest='ani', help='Cluster ani')
    parser.add_argument('-epi_file', action="store", type=str, dest='epi_file', default=None, help='Build input on an existing epi file with an existing outbreak.')
    parser.add_argument('-o', action="store", type=str, dest='output', help='Output directory')
    parser.add_argument('-t ', action="store", type=str, dest='threads', default='4',
                        help='Number of threads to use.')
    parser.add_argument('-v', '--version', action='version', version='%(prog)s ' + __version__)

    args = parser.parse_args()

    if args.illumina != []:
        check_illumina_pe(args.illumina)

    determineOutbreaks.determine_outbreaks(args)


def check_illumina_pe(files):
    if len(files) % 2 != 0:
        sys.exit('Error: Illumina files must be paired-end. Exiting.')

if __name__ == '__main__':
    main()
